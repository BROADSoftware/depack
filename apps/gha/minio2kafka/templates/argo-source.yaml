apiVersion: argoproj.io/v1alpha1
kind: EventSource
metadata:
  name: minio
  namespace: {{ .Release.Namespace  }}
spec:
  template:
    container:
      image: gha2/eventsource
      env:
        - name: SSL_CERT_FILE
          value: /ca/ca.crt
        - name: DEBUG_LOG
          value: "true"
      securityContext:
        runAsUser: 999
      volumeMounts:
        - mountPath: /ca/ca.crt
          name: minio-ca
          subPath: ca.crt
    volumes:
      - name: minio-ca
        secret:
          defaultMode: 420
          secretName: minio2kafka-cluster-issuer1-ca
  minio:
    minio1:
      bucket:
        name: {{ .Values.minio2kafka.bucket }}
      # s3 service endpoint
      endpoint: {{.Values.minio.server }}
      # list of events to subscribe to
      # Visit https://docs.minio.io/docs/minio-bucket-notification-guide.html
      events:
        - s3:ObjectCreated:Put
        - s3:ObjectCreated:Post
        - s3:ObjectCreated:Copy
        - s3:ObjectCreated:PutRetention
        - s3:ObjectCreated:CompleteMultipartUpload
        - s3:ObjectCreated:PutLegalHold
        #- s3:ObjectRemoved:Delete
      # type of the connection
      insecure: false
      # accessKey refers to K8s secret that stores the access key
      accessKey:
        # Key within the K8s secret whose corresponding value (must be base64 encoded) is access key
        key: accessKey
        # Name of the K8s secret that contains the access key
        name: minio2kafka-minio-server
      # secretKey contains information about K8s secret that stores the secret key
      secretKey:
        # Key within the K8s secret whose corresponding value (must be base64 encoded) is secret key
        key: secretKey
        # Name of the K8s secret that contains the secret key
        name: minio2kafka-minio-server

#    example-with-filter:
#      bucket:
#        name: mybucket
#      endpoint: minio-service.argo-events:9000
#      events:
#        - s3:ObjectCreated:Put
#      # Filters to apply on the key
#      # Optional
#      # e.g. filter for key that starts with "hello-" and ends with ".txt"
#      filter:
#        prefix: "hello-"
#        suffix: ".txt"
#      insecure: true
#      accessKey:
#        key: accesskey
#        name: artifacts-minio
#      secretKey:
#        key: secretkey
#        name: artifacts-minio
