---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cerebro
  namespace: cerebro
  labels:
    app: cerebro
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cerebro
  template:
    metadata:
      labels:
        app: cerebro
    spec:
      securityContext:              
        runAsUser: 1000          # Defined in cerebro image    
      containers:
      - name: cerebro
        args:
        # Setting binding address and port is to prevent some autodiscovery mechanisme, performing a lookup, which may retrieve a service if name are same.
        - -Dplay.server.http.port=9000 
        - -Dplay.server.http.address=0.0.0.0
        - -Dplay.ws.ssl.loose.acceptAnyCertificate=true
        # Following does not works. Kept for documentation
        #- -Dhosts[0].host="https://opendistro1-kspray2-ctb01-opendistro-es-client-service.opendistro1:9200"
        #- -Dhosts[0].name="opendistro1-kspray2-ctb01"
        #- -Dhosts[0].auth.username="admin"
        #- -Dhosts[0].auth.password="admin"
        #command: 
        #- /opt/cerebro/bin/cerebro 
        image: lmenezes/cerebro:0.9.2
        ports:
        - containerPort: 9000
---
apiVersion: v1
kind: Service
metadata:
  name: cerebro
  namespace: cerebro 
spec:
  selector:
    app: cerebro
  ports:
    - protocol: TCP
      port: 9000
      targetPort: 9000
---        
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: cerebro
  namespace: cerebro
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
{{ if .Values.clusterIssuer }}
    cert-manager.io/cluster-issuer: {{ .Values.clusterIssuer }}
    #kubernetes.io/tls-acme: "true"
{{ end }}
  labels:
    app: cerebro
spec:
  rules:
  - host: {{ required "host must be defined for ingress!" .Values.ingressHost }}
    http:
      paths:
      - backend:
          serviceName: cerebro
          servicePort: 9000
        path: /
{{ if .Values.clusterIssuer }}
  tls:
  - hosts:
      - {{ .Values.ingressHost }}
    secretName: cerebro-tls
{{ end }}


        