{{- if and .Values.cmak .Values.cmak.enabled -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "kafkaCluster.clusterName" . }}-cmak
  namespace: {{ .Release.Namespace }}
  labels:
    app: cmak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cmak
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: cmak
    spec:
      containers:
        - name: cmak
          image: 'hlebalbau/kafka-manager:stable'
          ports:
            - containerPort: 9000
              name: web
              protocol: TCP
          env:
            - name: ZK_HOSTS
              value: localhost:2181
          imagePullPolicy: Always
          securityContext:
            runAsUser: 1001    # Same as kafka
        - name: zoo-entrance
          image: 'gha2/zoo-entrance:latest'
          command:
            - /opt/stunnel/stunnel_run.sh
          ports:
            - containerPort: 2181
              name: zoo
              protocol: TCP
          env:
            - name: LOG_LEVEL
              value: notice
            - name: STRIMZI_ZOOKEEPER_CONNECT
              value: '{{ template "kafkaCluster.clusterName" . }}-zookeeper-client:2181'
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /opt/stunnel/stunnel_healthcheck.sh
                - '2181'
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - /opt/stunnel/stunnel_healthcheck.sh
                - '2181'
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /etc/cluster-operator-certs/
              name: cluster-operator-certs
            - mountPath: /etc/cluster-ca-certs/
              name: cluster-ca-certs
            - mountPath: /data
              name: workdir
      volumes:
        - name: cluster-operator-certs
          secret:
            defaultMode: 288
            secretName: {{ template "kafkaCluster.clusterName" . }}-cluster-operator-certs
        - name: cluster-ca-certs
          secret:
            defaultMode: 288
            secretName: {{ template "kafkaCluster.clusterName" . }}-cluster-ca-cert
        - name: workdir
          emptyDir: {}
      restartPolicy: Always


---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app: cmak
  name: cmak
  namespace: {{ .Release.Namespace }}
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: cmak
      ports:
        - port: 2181
          protocol: TCP
  podSelector:
    matchLabels:
      strimzi.io/name: {{ template "kafkaCluster.clusterName" . }}-zookeeper
  policyTypes:
    - Ingress


---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "kafkaCluster.clusterName" . }}-cmak
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: cmak
  ports:
    - protocol: TCP
      port: 9000
      targetPort: 9000
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "kafkaCluster.clusterName" . }}-cmak
  namespace: {{ .Release.Namespace }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
{{ if .Values.cmak.clusterIssuer }}
    cert-manager.io/cluster-issuer: cluster-issuer1
{{ end }}
  labels:
    app: cmak
spec:
  rules:
    - host: {{ .Values.cmak.ingressHost }}
      http:
        paths:
          - backend:
              serviceName: {{ template "kafkaCluster.clusterName" . }}-cmak
              servicePort: 9000
            path: /
{{ if .Values.cmak.clusterIssuer }}
  tls:
    - hosts:
        - {{ .Values.cmak.ingressHost }}
      secretName: {{ template "kafkaCluster.clusterName" . }}-cmak-tls
{{ end }}

{{ end }}

