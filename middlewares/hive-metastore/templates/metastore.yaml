---
apiVersion: v1
kind: Secret
metadata:
  name: metastore-secret
  namespace: {{ .Release.Namespace  }}
type: Opaque
data:
  postgresPassword: {{ .Values.metastore.postgresPassword | b64enc }}
  hivemsPassword: {{ .Values.metastore.hivemsPassword | b64enc }}
  himemsEncryptedPassword: {{ .Values.metastore.himemsEncryptedPassword | b64enc }}
  s3Endoint: {{ .Values.metastore.s3Endoint | b64enc }}
  s3AccessKey: {{ .Values.metastore.s3AccessKey | b64enc }}
  s3SecretKey: {{ .Values.metastore.s3SecretKey | b64enc }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metastore
  namespace: {{ .Release.Namespace  }}
  labels:
    app: metastore
spec:
  replicas: {{ .Values.metastore.replicas }}
  selector:
    matchLabels:
      app: metastore
  template:
    metadata:
      labels:
        app: metastore
    spec:
      containers:
        - name: metastore
          image: registry.gitlab.com/gha1/hive-metastore
          imagePullPolicy: {{ .Values.metastore.imagePullPolicy }}
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgresPassword
                  name: metastore-secret
            - name: HIVEMS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: hivemsPassword
                  name: metastore-secret
            - name: HIVEMS_ENCRYPTED_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: himemsEncryptedPassword
                  name: metastore-secret
            - name: S3_ENDPOINT
              valueFrom:
                secretKeyRef:
                  key: s3Endoint
                  name: metastore-secret
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: s3AccessKey
                  name: metastore-secret
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: s3SecretKey
                  name: metastore-secret
            - name: POSTGRES_HOST
              value: "{{ .Values.metastore.postgresService }}"
            - name: POSTGRES_PORT
              value: "{{ .Values.metastore.postgresPort }}"
            - name: LOG_LEVEL
              value: "{{ .Values.metastore.logLevel }}"
            - name: S3_REQUEST_TIMEOUT
              value: "{{ .Values.metastore.s3RequestTimeOut }}"
      securityContext:
        runAsUser: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: metastore
  namespace: {{ .Release.Namespace  }}
{{ if and (.Values.metastore.metallb.enabled) (.Values.metastore.metallb.ipSharingKey) }}
  annotations:
    metallb.universe.tf/allow-shared-ip: {{ .Values.metastore.metallb.ipSharingKey }}
{{ end}}
spec:
  selector:
    app: metastore
  ports:
    - protocol: TCP
      port: {{ .Values.metastore.servicePort }}
      targetPort: 9083
{{ if .Values.metastore.metallb.enabled }}
  type: LoadBalancer
{{ end }}
{{ if and (.Values.metastore.metallb.enabled) (.Values.metastore.metallb.externalIp) }}
  loadBalancerIP:   {{ .Values.metastore.metallb.externalIp }}
{{ end }}
